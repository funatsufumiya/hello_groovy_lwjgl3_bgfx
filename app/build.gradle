/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Groovy application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.11.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the groovy Plugin to add support for Groovy.
    id 'groovy'
    id 'java'
    id "com.github.tkruse.groovysh" version "1.0.8"

    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

// DO NOT USE THIS. This is not compatible with bgfx and glfw_async
// applicationDefaultJvmArgs = ["-XstartOnFirstThread"]

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

project.ext.lwjglVersion = "3.3.4"
project.ext.lwjglNatives = "natives-macos-arm64"
project.ext.lwjglNatives2 = "natives-windows"

dependencies {
    // Use the latest Groovy version for building this library
    implementation libs.groovy.all

    // This dependency is used by the application.
    implementation libs.guava

    // https://mvnrepository.com/artifact/org.lwjgl/lwjgl
    implementation group: 'org.lwjgl', name: 'lwjgl', version: '3.3.4'
    // https://mvnrepository.com/artifact/org.lwjgl/lwjgl-glfw
    implementation group: 'org.lwjgl', name: 'lwjgl-glfw', version: '3.3.4'
    // https://mvnrepository.com/artifact/org.lwjgl/lwjgl-bgfx
    implementation group: 'org.lwjgl', name: 'lwjgl-bgfx', version: '3.3.4'

    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-bgfx::$lwjglNatives"

    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives2"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives2"
    runtimeOnly "org.lwjgl:lwjgl-bgfx::$lwjglNatives2"

    // https://mvnrepository.com/artifact/com.tkruse.gradle/gradle-groovysh-plugin
    implementation group: 'com.tkruse.gradle', name: 'gradle-groovysh-plugin', version: '1.0.8'

    // Use the awesome Spock testing and specification framework even with Java
    testImplementation libs.spock.core
    testImplementation libs.junit

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.example.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
